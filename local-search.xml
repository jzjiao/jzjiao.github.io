<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微调大语言模型之参数篇</title>
    <link href="/2023/11/16/%E5%BE%AE%E8%B0%83%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E4%B9%8B%E5%8F%82%E6%95%B0%E7%AF%87/"/>
    <url>/2023/11/16/%E5%BE%AE%E8%B0%83%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E4%B9%8B%E5%8F%82%E6%95%B0%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在进行大语言模型微调时，需要设置很多参数，比如数据集的名称&#x2F;路径、模型的名称&#x2F;路径、学习率大小和batchsize等参数。那么我们需要将哪些参数设置成外部读取，这些参数的默认值是什么，以及都有什么作用？本篇文章基于<a href="https://github.com/FlagAlpha/Llama2-Chinese/tree/main">Llama2-Chinese</a>中的<a href="https://github.com/FlagAlpha/Llama2-Chinese/blob/main/train/sft/finetune_clm_lora.py">train&#x2F;sft&#x2F;finetune_clm_lora.py</a>进行参数解析，希望可以从入参的角度对训练过程有整体把握。</p><h2 id="dataclass装饰符介绍"><a href="#dataclass装饰符介绍" class="headerlink" title="@dataclass装饰符介绍"></a>@dataclass装饰符介绍</h2><p>在进行具体参数介绍前，首先介绍一下 <strong>@dataclass</strong>装饰符。被@dataclass修饰的类可以看作是“有默认值的可变命名元组（mutable namedtuples with defaults）”，具有很高的易用性；同时又保留了类的各种特性，提供更大灵活性。它的在<a href="https://peps.python.org/pep-0557/">PEP-577</a>中被提出，它的简介为<img src="/pep577-abstract.jpg" alt="简介"><br>@dataclass 装饰器是 Python 的 dataclasses 模块提供的一个功能，被它修饰的类会自动创建特殊方法，如__init__方法和__repr__方法等。它的详细介绍可以参考<a href="https://docs.python.org/zh-cn/3/library/dataclasses.html">这个链接</a>，本文中主要需要关注的是使用field定义变量和使用__post_init__进行后处理。</p><h3 id="field用法"><a href="#field用法" class="headerlink" title="field用法"></a>field用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> dataclasses <span class="hljs-keyword">import</span> dataclass<br><span class="hljs-meta">@dataclass</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TestArguments</span>:<br>    a: <span class="hljs-built_in">int</span> = field(<br>        default=<span class="hljs-number">3</span>,<br>        metadata=&#123;<br>            <span class="hljs-string">&#x27;help&#x27;</span>: (<br>                <span class="hljs-string">&#x27;This is a number.&#x27;</span><br>            )<br>        &#125;<br>    )<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
      <tag>SFT</tag>
      
      <tag>LoRA</tag>
      
      <tag>TrainingArguments</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
